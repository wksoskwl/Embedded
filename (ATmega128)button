#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>

uint8_t btn1;
uint8_t btn2;
uint8_t btn3;
uint8_t btn4;
int n = 0;

int main(void)
{
	DDRA = 0xFF;
	DDRB = 0x00;
	while (1)
	{
		btn1 = ~PINB & 0x01;
		btn2 = ~PINB & 0x02;
		btn3 = ~PINB & 0x04;
		btn4 = ~PINB & 0x08;
		if(btn1 == 0x00) n = 1;
		else if(btn2 == 0x00) n = 2;
		else if(btn3 == 0x00) n = 3;
		else if(btn4 == 0x00) n = 4;
		if(n == 1){
			PORTA = 0x01;
			_delay_ms(100);
			PORTA = 0x02;
			_delay_ms(100);
			PORTA = 0x04;
			_delay_ms(100);
			PORTA = 0x08;
			_delay_ms(100);
		}
		if(n == 2){
			PORTA = 0x05;
			_delay_ms(300);
			PORTA = 0x0A;
			_delay_ms(300);
		}
		if(n == 3){
			PORTA = 0x01;
			_delay_ms(200);
			PORTA = 0x03;
			_delay_ms(200);
			PORTA = 0x07;
			_delay_ms(200);
			PORTA = 0x0F;
			_delay_ms(200);
		}
		if(n == 4){
			PORTA = 0x01;
			_delay_ms(200);
			PORTA = 0x03;
			_delay_ms(200);
			PORTA = 0x07;
			_delay_ms(200);
			PORTA = 0x0F;
			_delay_ms(200);
			PORTA = 0x0E;
			_delay_ms(200);
			PORTA = 0x0C;
			_delay_ms(200);
			PORTA = 0x08;
			_delay_ms(200);
			PORTA = 0x00;
			_delay_ms(200);
		}
		
		_delay_ms(100);
	}
}
